version: "3"

silent: true

# includes:
#   crypto:
#     taskfile: crates/crypto/Taskfile.yml
#     dir: crates/crypto

vars:
  TASK_BINARY: task # the name of the task executable
  TEMPLATE_URL: github:brxken128/template
  REMOTE_TASKFILE_NAME: RepoTaskfile.yml
  REMOTE_TASKFILE_URL: "https://raw.githubusercontent.com/brxken128/taskfiles/main/{{.REMOTE_TASKFILE_NAME}}"

tasks:
  default:
    desc: Lists all commands
    cmd: "{{.TASK_BINARY}} --list-all"

  script:setup:
    desc: Required to run the script. Installs `fd` (very fast `find` alternative)
    cmd: cargo install fd-find

  # base tasks
  dev:
    desc: Runs `pnpm tauri dev`
    cmds:
      - pnpm tauri dev --no-watch
    aliases: [d]

  dev:web:clean:
    desc: Cleans output directories and runs `sd-server` and Spacedrive web
    cmds:
      - pnpm dev:web
    aliases: [w]

  build:
    desc: Runs `pnpm tauri build`
    cmds:
      - pnpm tauri build
    aliases: [b]

  # clean base tasks
  dev:clean:
    desc: Cleans output directories and runs `pnpm i, prep, desktop dev`
    cmds:
      - task: clean
      - task: setup
      - task: dev

  build:clean:
    desc: Cleans output directories and runs `pnpm i, prep, desktop build`
    cmds:
      - task: clean
      - task: setup
      - task: build

  internal-clean:
    internal: true
    cmds:
      - cmd: fd -gIH --exclude ".git" --exclude ".github" --prune "{{.NAME}}" . -x rm -rf "{{.RM}}" \; -x echo "Removing {{.RM}}" \;
        platforms: [darwin, linux]

  # cleaning output dirs
  clean:
    desc: Cleans `target/` and all `node_modules`.
    cmds:
      # unix
      - cmd: until cargo clean; do; done
        platforms: [darwin, linux, windows]
      - task: internal-clean
        vars:
          NAME: node_modules
          RM: "{}"
    aliases: [c]

  clean:full:
    desc: Cleans every output directory (`target`, `node_modules`, `dist`, `.deps`, `.next`, `.turbo`).
    cmds:
      - cmd: until cargo clean; do; done
        platforms: [darwin, linux]

      - for: ["node_modules", ".deps", ".next", ".turbo"]
        task: internal-clean
        vars:
          NAME: "{{.ITEM}}"
          RM: "{}"

      - task: internal-clean
        vars:
          NAME: dist
          RM: "{}/*"
    aliases: [ca]

  rm:data:
    desc: This removes the Spacedrive data directory
    prompt: This will delete the Spacedrive data directory. Are you sure you want to continue?
    cmds:
      - cmd: rm -rf "$HOME/Library/Application Support/spacedrive"
        platforms: [darwin]
      - cmd: rm -rf "$HOME/.local/share/spacedrive"
        platforms: [linux]
      - cmd: rmdir /s /q "{{.USERPROFILE}}/AppData/Roaming/spacedrive" #?????
        platforms: [windows]
        # prompt: This is untested, are you sure you'd like to run?

  rm:.spacedrive-files:
    desc: This removes all `.spacedrive` files from your `$HOME` directory
    prompt: This will delete .spacedrive files in the current path (recursively). Are you sure you want to continue?
    dir: $HOME
    cmds:
      - cmd: fd -gH --exclude ".git" --prune ".spacedrive" . -x rm -rf "{}" \; -x echo "Removing {}" \;
        platforms: [darwin, linux]

  # setup stuff
  setup:
    desc: Runs pnpm i and prep
    cmds:
      - pnpm i
      - pnpm prep
    aliases: [s]

  internal-rm:
    internal: true
    cmds:
      - cmd: rm -rf "{{.NAME}}" && echo "Removing \"{{.NAME}}\""

  rm:localstorage:
    desc: Removes all localStorage and cache related directories
    platforms: [darwin, linux]
    cmds:
      - cmd: rm -rf "$HOME/Library/WebKit/Spacedrive" "$HOME/Library/Caches/Spacedrive" "$HOME/Library/WebKit/com.spacedrive.desktop" "$HOME/Library/Caches/com.spacedrive.desktop"
        platforms: [darwin]
      - cmd: rm -rf  "~/.local/share/com.spacedrive.desktop/" "~/.cache/spacedrive"
        platforms: [linux]

  data:info:
    desc: View info about your Spacedrive data backup
    platforms: [darwin, linux]
    cmds:
      - cmd: cat "$HOME/spacedrive-backup/BACKUP"
        platforms: [darwin, linux]

  data:backup:
    desc: Backup your Spacedrive data
    prompt: This will delete your current Spacedrive backup (at $HOME/spacedrive-backup) and create one from your current Spacedrive data directory. Are you sure you want to continue?
    platforms: [darwin, linux]
    cmds:
      - cmd: rm -rf "$HOME/spacedrive-backup"
        platforms: [darwin, linux]
      - cmd: rsync -arc "$HOME/Library/Application Support/spacedrive/" "$HOME/spacedrive-backup/"
        platforms: [darwin]
      - cmd: rsync -arc "$HOME/.local/share/spacedrive/" "$HOME/spacedrive-backup/"
        platforms: [linux]
      - cmd: echo "This backup was created at $(date +%Y-%m-%d-%T)" > "$HOME/spacedrive-backup/BACKUP"
        platforms: [darwin, linux]

  data:restore:
    desc: Restore your Spacedrive data
    prompt: This will delete your Spacedrive data directory and restore it with the one found in $HOME/spacedrive-backup. Are you sure you want to continue?
    platforms: [darwin, linux]
    cmds:
      - cmd: rm -rf "$HOME/Library/Application Support/spacedrive"
        platforms: [darwin]
      - cmd: rm -rf "$HOME/.local/share/spacedrive"
        platforms: [linux]
      - cmd: rsync -arc "$HOME/spacedrive-backup/" "$HOME/Library/Application Support/spacedrive/"
        platforms: [darwin]
      - cmd: rsync -arc "$HOME/spacedrive-backup/" "$HOME/.local/share/spacedrive/"
        platforms: [linux]

  # rm-localstorage-macos:
  #   internal: true
  #   platforms: [darwin]
  #   cmds:
  #     - for:
  #         [
  #           "$HOME/Library/WebKit/Spacedrive",
  #           "$HOME/Library/Caches/Spacedrive",
  #           "$HOME/Library/WebKit/com.spacedrive.desktop",
  #           "$HOME/Library/Caches/com.spacedrive.desktop",
  #         ]
  #       task: internal-rm
  #       vars:
  #         NAME: "{{.ITEM}}"

  # rm-localstorage-linux:
  #   internal: true
  #   platforms: [linux]
  #   cmds:
  #     - for:
  #       [
  #         "~/.local/share/com.spacedrive.desktop/",
  #         "~/.cache/spacedrive",
  #       ]
  #       task: internal-rm
  #       vars:
  #         NAME: "{{.ITEM}}"

  # nuke:
  #   desc: Nuke all Spacedrive related files (excluding `.spacedrive` files)
  #   prompt: This can be catastrophic, are you sure you'd like to continue?
  #   cmds:
  #     - task: clean
  #     - task: rm:data
  #     - task: rm:localstorage

  ci:
    desc: Run "CI" locally to see if it will pass
    cmds:
      - cmd: pnpm typecheck
      - cmd: pnpm lint
      - cmd: cargo fmt --all -- --check
      - cmd: cargo clippy --workspace --all-features

  update:
    desc: Updates and overrides the current Taskfile from Github
    cmds:
      - 'echo "Pre-update hash: " && b3sum --no-names Taskfile.yml'
      - curl -s -o Taskfile.yml "{{.REMOTE_TASKFILE_URL}}"
      - 'echo "Post-update hash: " && b3sum --no-names Taskfile.yml'
